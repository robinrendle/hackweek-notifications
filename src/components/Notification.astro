---
export interface Props {
  read: boolean;
  title: string;
  desc: string;
  type: string;
  time: string;
}

const {read, title, desc, type, time} = Astro.props;

import Bell from '../components/icons/Bell.astro'
import Check from '../components/icons/Check.astro'
---

<style lang="scss">
  .notification {
    --notification-background: white;
    background: var(--notification-background);
    padding: 16px 20px 16px 10px;
    display: flex;
    align-items: center;
    position: relative;
    border-bottom: 1px solid #e7e1ec;
    color: var(--color-text);

    &:last-of-type {
      border-bottom: none;
      border-radius: 3px;
    }
    
    &:hover {
      background: rgba(0,0,180,0.03);
      cursor: pointer;
      .date {
        opacity: 0;
      }
      .actions {
        display: flex;
        gap: 5px;
        position: absolute;
        right: -5px;
        top: 18px;
      }
    }
  }

  time {
    color: #aaa;
    text-align: right;
    font-size: 12px;
    position: absolute;
    right: 10px;
    top: 10px;
    background: white;

    @media screen and (min-width: 767px) {
      color: var(--color-subtext);
      font-size: 16px;
      position: static;
      margin-left: auto;
      min-width: 150px;
    }
  }

  .actions {
    width: 100px;
    position: absolute; 
    right: 0;
    display: none;

    button {
      border-radius: 4px;
      width: 36px;
      height: 36px;
    }
  }

  .title {
    display: flex;
    flex-direction: column;

    a {
      margin-bottom: 1px;
      text-decoration: none;
      color: var(--color-link);
    }
  }

  .status {
    &:before {
      content: "";
      width: 8px;
      height: 8px;
      background: #ccc;
      display: block;
      border-radius: 50%;
      transition: .2s background ease ;
    }
  }

  .status-unread:before {
    background: var(--color-theme);
  }

  .wrapper {
    display: flex;
    align-items: center;
    gap: 10px;
    width: 100%;
  }

  .type {
    display: none;
    @media screen and (min-width: 767px) {
      display: flex;
      margin-left: auto;
      background: #eee;
      font-size: 14px;
      padding: 5px 8px;
      border-radius: 3px;
    }
  }
</style>

<div class={read ? 'notification notification-read' : 'notification'} onclick="this.querySelector('.status').classList.toggle('status-unread');">
  <div class="wrapper">
    <div class={read ? 'status' : 'status status-unread'}></div>
    <input type="checkbox" class="checkbox" />

    <div class="title">
      <a href="#">{title}</a>
      {desc}
    </div>
    
    <div class="type">
      {type}
    </div>
  </div>


  <time class="date" datetime="2021-11-18T14:54:39.929-0400">
    {time}
  </time>


  <div class="actions">
    <button class="check" onclick="
      console.log(this.parentElement.parentElement.remove());"><Check /></button>
    <button><Bell /></button>
  </div>
</div>